{"version":3,"sources":["components/Player.component.js","components/Song.component.js","data.js","components/library-song.component.js","components/Library.component.js","components/Nav.component.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","getTime","time","Math","floor","slice","useEffect","newSongs","map","song","id","active","skipHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationProcentage","className","currentTime","style","background","color","value","type","max","duration","min","onChange","e","target","backgroundColor","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","chillHop","audio","uuidv4","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","endSongHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eba7b19c.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong])\r\n\r\n  function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const skipHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if(direction === 'skip-forward'){\r\n     await  setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if(direction === 'skip-back'){\r\n      if((currentIndex - 1) % songs.length === -1){\r\n       await setCurrentSong(songs[songs.length -1]);\r\n       if(isPlaying) {audioRef.current.play()};\r\n        return;\r\n      }\r\n     await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if(isPlaying) {audioRef.current.play()}; \r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationProcentage}%)`\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n          <input\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            max={songInfo.duration || 0}\r\n            min={0}\r\n            onChange={dragHandler}\r\n            style={{ backgroundColor: currentSong.color }}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;","import React from 'react';\r\n\r\n\r\nconst Song = ({ currentSong }) => (\r\n  <div className=\"song-container\">\r\n    <img alt={currentSong.name} src={currentSong.cover}></img>\r\n    <h2>{currentSong.name}</h2>\r\n    <h3>{currentSong.artist}</h3>\r\n  </div>\r\n);\r\n\r\nexport default Song;","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Snowstalgia\",\r\n      cover:\r\n      'https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-150x150.jpg',\r\n      artist: \"invention_\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10072\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Leaves covered by snow\",\r\n      cover:\r\n      'https://chillhop.com/wp-content/uploads/2020/07/4b06cedf68f3f842d3a0fc13ae62564dec6056c8-150x150.jpg',\r\n      artist: \"No Spirit\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10071\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Drawing Dunes\",\r\n      cover:\r\n      'https://chillhop.com/wp-content/uploads/2020/07/5c2d5b05dfc98afb5ed850ca918f732445b8ca1e-150x150.jpg',\r\n      artist: \"Matt Quentin\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10073\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    \r\n    \r\n    \r\n    \r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React from \"react\";\r\n\r\n\r\nconst LibrarySong = ({\r\n  name,\r\n  artist,\r\n  cover,\r\n  id,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  active,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong({ ...selectedSong[0] });\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    //\r\n    if(isPlaying) {audioRef.current.play()};\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={cover} alt=\"\" />\r\n      <div className=\"song-description\">\r\n        <h3>{name}</h3>\r\n        <h4>{artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\n\r\nimport LibrarySong from './library-song.component';\r\n\r\nconst Library = ({ libraryStatus, songs, setCurrentSong, audioRef, isPlaying, setSongs }) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            cover={song.cover}\r\n            name={song.name}\r\n            artist={song.artist}\r\n            active={song.active}\r\n            key={song.id}\r\n            id={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) =>{\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n               <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, {useState, useRef} from 'react';\nimport Player from './components/Player.component';\nimport Song from './components/Song.component';\nimport \"./styles/app.scss\";\nimport data from './data';\nimport Library from './components/Library.component';\nimport Nav from './components/Nav.component';\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(data());\n\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationProcentage: 0\n  });\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(current); \n    const roundedDuration = Math.round(duration)\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({ ...songInfo, currentTime: current, duration: duration, animationProcentage:animation });\n  };\n\n  const endSongHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) {audioRef.current.play()}; \n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav \n        libraryStatus={libraryStatus}\n        setLibraryStatus = {setLibraryStatus}\n      />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        songs={songs}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        libraryStatus = {libraryStatus}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={endSongHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}